name: "Container: ALL // Build and publish"

on: workflow_dispatch

env:
  REGISTRY: ghcr.io
  REPOSITORY: bihe/monorepo
  GIT_COMMIT_SHA: ${{ github.sha }}
  BUILD_ID: ${{ github.run_id }}
  FRONTEND_MODE: build

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Ghcr login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Provide the abbrev git-commit-hash
        id: githash
        run: |
          export GIT_HASH="${GIT_COMMIT_SHA:0:7}"
          echo "GIT_HASH=${GIT_HASH}" >> $GITHUB_ENV

      - name: Get current date
        id: date
        run: |
          export BUILD_DATE="$(date +'%Y%m%d')"
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_ENV

      # ---------------------------------------------------------------------

      - name: "Build :: bookmarks"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: bookmarks.Dockerfile
          build-args: |
            buildtime_variable_version=${{ env.BUILD_ID }}
            buildtime_variable_timestamp=${{ env.BUILD_DATE }}
            buildtime_variable_commit=${{ env.GIT_HASH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/bookmarks:latest
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/bookmarks:${{ env.GIT_HASH }}

      # ---------------------------------------------------------------------

      - name: "Build :: core"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: core.Dockerfile
          build-args: |
            buildtime_variable_version=${{ env.BUILD_ID }}
            buildtime_variable_timestamp=${{ env.BUILD_DATE }}
            buildtime_variable_commit=${{ env.GIT_HASH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/core:latest
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/core:${{ env.GIT_HASH }}

      # ---------------------------------------------------------------------

      - name: "Build :: mydms"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: mydms.Dockerfile
          build-args: |
            buildtime_variable_version=${{ env.BUILD_ID }}
            buildtime_variable_timestamp=${{ env.BUILD_DATE }}
            buildtime_variable_commit=${{ env.GIT_HASH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/mydms:latest
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/mydms:${{ env.GIT_HASH }}

      # ---------------------------------------------------------------------

      - name: "Build :: frontend"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: caddy.Dockerfile
          build-args: |
            buildtime_variable_version=${{ env.BUILD_ID }}
            buildtime_variable_timestamp=${{ env.BUILD_DATE }}
            buildtime_variable_commit=${{ env.GIT_HASH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/frontend:latest
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/frontend:${{ env.GIT_HASH }}

      # ---------------------------------------------------------------------

      - name: "Build :: litestream"
        uses: docker/build-push-action@v4
        with:
          context: ./litestream
          file: litestream.Dockerfile
          build-args: |
            buildtime_variable_version=${{ env.BUILD_ID }}
            buildtime_variable_timestamp=${{ env.BUILD_DATE }}
            buildtime_variable_commit=${{ env.GIT_HASH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/litestream:latest
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/litestream:${{ env.GIT_HASH }}
